{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x658638045541874d8da1062021c9c6bd8000cd5052ca665bccbbe2c0d0a91ec8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "822571",
    "logsBloom": "0x
    "blockHash": "0x94936a0353d8bd22b62405a3cc9b338814bddcc0573e0b6991c8dd947850eae7",
    "transactionHash": "0x658638045541874d8da1062021c9c6bd8000cd5052ca665bccbbe2c0d0a91ec8",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "822571",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7fc0fa93959bef162c5303f3935c0f85",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Danny Asema\",\"details\":\"this implememnts pricefeeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"a contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"a demo\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**@title a contract for crowd funding\\n * @author Danny Asema\\n * @notice a demo\\n * @dev this implememnts pricefeeds as our library\\n *\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n    AggregatorV3Interface public priceFeed;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    // function getVersion() public view returns (uint256){\\n    //     ETH/USD price feed address of Goerli Network.\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n    //     return priceFeed.version();\\n    // }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n}\\n\",\"keccak256\":\"0x82b5e6ce7e6c6b74971ad22d7323f59ce00b8fc0fe16d7d46288232ba0cd0e62\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x71592abac56e937d4585c7faa1f23b2d974df0b38d0bdb3c9925f740897d9af8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610edd380380610edd83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d7e61015f6000396000818161019301526105580152610d7e6000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f4578063b60d42881461011f578063dba6335f14610129578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c5780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae9190610790565b6103d1565b6040516100c091906107d6565b60405180910390f35b3480156100d557600080fd5b506100de6103e9565b6040516100eb91906107d6565b60405180910390f35b34801561010057600080fd5b506101096103f6565b6040516101169190610850565b60405180910390f35b61012761041c565b005b34801561013557600080fd5b5061013e610556565b60405161014b919061087a565b60405180910390f35b34801561016057600080fd5b5061017b600480360381019061017691906108c1565b61057a565b604051610188919061087a565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610216576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102c15760006001828154811061023c5761023b6108ee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102b99061094c565b915050610219565b50600067ffffffffffffffff8111156102dd576102dc610994565b5b60405190808252806020026020018201604052801561030b5781602001602082028036833780820191505090505b5060019080519060200190610321929190610686565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610348906109f4565b60006040518083038185875af1925050503d8060008114610385576040519150601f19603f3d011682016040523d82523d6000602084013e61038a565b606091505b50509050806103ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c590610a66565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061045b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b990919063ffffffff16565b101561049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390610ad2565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ea9190610af2565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061058a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c5836105f5565b90506000670de0b6b3a764000085836105de9190610b26565b6105e89190610b97565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610643573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106679190610c55565b5050509150506402540be4008161067e9190610cd0565b915050919050565b8280548282559060005260206000209081019282156106ff579160200282015b828111156106fe5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a6565b5b50905061070c9190610710565b5090565b5b80821115610729576000816000905550600101610711565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075d82610732565b9050919050565b61076d81610752565b811461077857600080fd5b50565b60008135905061078a81610764565b92915050565b6000602082840312156107a6576107a561072d565b5b60006107b48482850161077b565b91505092915050565b6000819050919050565b6107d0816107bd565b82525050565b60006020820190506107eb60008301846107c7565b92915050565b6000819050919050565b600061081661081161080c84610732565b6107f1565b610732565b9050919050565b6000610828826107fb565b9050919050565b600061083a8261081d565b9050919050565b61084a8161082f565b82525050565b60006020820190506108656000830184610841565b92915050565b61087481610752565b82525050565b600060208201905061088f600083018461086b565b92915050565b61089e816107bd565b81146108a957600080fd5b50565b6000813590506108bb81610895565b92915050565b6000602082840312156108d7576108d661072d565b5b60006108e5848285016108ac565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610957826107bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109895761098861091d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109de6000836109c3565b91506109e9826109ce565b600082019050919050565b60006109ff826109d1565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a50600b83610a09565b9150610a5b82610a1a565b602082019050919050565b60006020820190508181036000830152610a7f81610a43565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610abc601b83610a09565b9150610ac782610a86565b602082019050919050565b60006020820190508181036000830152610aeb81610aaf565b9050919050565b6000610afd826107bd565b9150610b08836107bd565b9250828201905080821115610b2057610b1f61091d565b5b92915050565b6000610b31826107bd565b9150610b3c836107bd565b9250828202610b4a816107bd565b91508282048414831517610b6157610b6061091d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ba2826107bd565b9150610bad836107bd565b925082610bbd57610bbc610b68565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be781610bc8565b8114610bf257600080fd5b50565b600081519050610c0481610bde565b92915050565b6000819050919050565b610c1d81610c0a565b8114610c2857600080fd5b50565b600081519050610c3a81610c14565b92915050565b600081519050610c4f81610895565b92915050565b600080600080600060a08688031215610c7157610c7061072d565b5b6000610c7f88828901610bf5565b9550506020610c9088828901610c2b565b9450506040610ca188828901610c40565b9350506060610cb288828901610c40565b9250506080610cc388828901610bf5565b9150509295509295909350565b6000610cdb82610c0a565b9150610ce683610c0a565b9250828202610cf481610c0a565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d2c57610d2b61091d565b5b8282058414831517610d4157610d4061091d565b5b509291505056fea2646970667358221220d6c2817db88fb1dffcefa4c3d29781d568162aa732837a2cd00773286d0ad4a464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f4578063b60d42881461011f578063dba6335f14610129578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c5780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae9190610790565b6103d1565b6040516100c091906107d6565b60405180910390f35b3480156100d557600080fd5b506100de6103e9565b6040516100eb91906107d6565b60405180910390f35b34801561010057600080fd5b506101096103f6565b6040516101169190610850565b60405180910390f35b61012761041c565b005b34801561013557600080fd5b5061013e610556565b60405161014b919061087a565b60405180910390f35b34801561016057600080fd5b5061017b600480360381019061017691906108c1565b61057a565b604051610188919061087a565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610216576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102c15760006001828154811061023c5761023b6108ee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102b99061094c565b915050610219565b50600067ffffffffffffffff8111156102dd576102dc610994565b5b60405190808252806020026020018201604052801561030b5781602001602082028036833780820191505090505b5060019080519060200190610321929190610686565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610348906109f4565b60006040518083038185875af1925050503d8060008114610385576040519150601f19603f3d011682016040523d82523d6000602084013e61038a565b606091505b50509050806103ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c590610a66565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061045b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b990919063ffffffff16565b101561049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390610ad2565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ea9190610af2565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061058a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c5836105f5565b90506000670de0b6b3a764000085836105de9190610b26565b6105e89190610b97565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610643573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106679190610c55565b5050509150506402540be4008161067e9190610cd0565b915050919050565b8280548282559060005260206000209081019282156106ff579160200282015b828111156106fe5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a6565b5b50905061070c9190610710565b5090565b5b80821115610729576000816000905550600101610711565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075d82610732565b9050919050565b61076d81610752565b811461077857600080fd5b50565b60008135905061078a81610764565b92915050565b6000602082840312156107a6576107a561072d565b5b60006107b48482850161077b565b91505092915050565b6000819050919050565b6107d0816107bd565b82525050565b60006020820190506107eb60008301846107c7565b92915050565b6000819050919050565b600061081661081161080c84610732565b6107f1565b610732565b9050919050565b6000610828826107fb565b9050919050565b600061083a8261081d565b9050919050565b61084a8161082f565b82525050565b60006020820190506108656000830184610841565b92915050565b61087481610752565b82525050565b600060208201905061088f600083018461086b565b92915050565b61089e816107bd565b81146108a957600080fd5b50565b6000813590506108bb81610895565b92915050565b6000602082840312156108d7576108d661072d565b5b60006108e5848285016108ac565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610957826107bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109895761098861091d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109de6000836109c3565b91506109e9826109ce565b600082019050919050565b60006109ff826109d1565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a50600b83610a09565b9150610a5b82610a1a565b602082019050919050565b60006020820190508181036000830152610a7f81610a43565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610abc601b83610a09565b9150610ac782610a86565b602082019050919050565b60006020820190508181036000830152610aeb81610aaf565b9050919050565b6000610afd826107bd565b9150610b08836107bd565b9250828201905080821115610b2057610b1f61091d565b5b92915050565b6000610b31826107bd565b9150610b3c836107bd565b9250828202610b4a816107bd565b91508282048414831517610b6157610b6061091d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ba2826107bd565b9150610bad836107bd565b925082610bbd57610bbc610b68565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be781610bc8565b8114610bf257600080fd5b50565b600081519050610c0481610bde565b92915050565b6000819050919050565b610c1d81610c0a565b8114610c2857600080fd5b50565b600081519050610c3a81610c14565b92915050565b600081519050610c4f81610895565b92915050565b600080600080600060a08688031215610c7157610c7061072d565b5b6000610c7f88828901610bf5565b9550506020610c9088828901610c2b565b9450506040610ca188828901610c40565b9350506060610cb288828901610c40565b9250506080610cc388828901610bf5565b9150509295509295909350565b6000610cdb82610c0a565b9150610ce683610c0a565b9250828202610cf481610c0a565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d2c57610d2b61091d565b5b8282058414831517610d4157610d4061091d565b5b509291505056fea2646970667358221220d6c2817db88fb1dffcefa4c3d29781d568162aa732837a2cd00773286d0ad4a464736f6c63430008110033",
  "devdoc": {
    "author": "Danny Asema",
    "details": "this implememnts pricefeeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "a contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "a demo",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}